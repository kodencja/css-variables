{"version":3,"sources":["reportWebVitals.js","index.js","components/Controls.jsx","footer/Footer.jsx","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","Blur","lazy","Color","Spacing","Controls","console","log","modalContextValue","useContext","ModalContext","onChanging","onValue","className","fallback","React","memo","Footer","onModalOpen","type","href","target","rel","onClick","Photo","ModalComp","createContext","state","img","blur","color","spacing","names","modalIsOpen","handleChange","e","setState","name","value","handleVal","handleModalOpen","this","style","textAlign","backgroundColor","padding","filter","Provider","onSpacing","onBgr","onBlur","isModalOpen","Component"],"mappings":"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","file":"static/js/main.47ff022a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useContext, lazy, Suspense } from \"react\";\r\nimport { ModalContext } from \"../App\";\r\nconst Blur = lazy(() => import(\"./Blur\"));\r\nconst Color = lazy(() => import(\"./Color\"));\r\nconst Spacing = lazy(() => import(\"./Spacing\"));\r\n\r\nfunction Controls() {\r\n  console.log(\"Controls Fn\");\r\n  const modalContextValue = useContext(ModalContext);\r\n  const { onChanging, onValue } = modalContextValue;\r\n\r\n  return (\r\n    <div className=\"container-fluid sec1 m-0\">\r\n      <form className=\"form-group row py-4 mx-auto\">\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <Spacing onChanging={onChanging} onValue={onValue} />\r\n          <Blur onChanging={onChanging} onValue={onValue} />\r\n          <Color onChanging={onChanging} onValue={onValue} />\r\n          {/* {children} */}\r\n        </Suspense>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Controls);\r\n","import React from \"react\";\r\nimport(\"./css/footer.css\");\r\n\r\nfunction Footer({ onModalOpen }) {\r\n  console.log(\"Footer Fn\");\r\n  return (\r\n    <footer className=\"down-buttons text-center\">\r\n      <button type=\"link\" className=\"btn-down home-page-link shadow-mid-dark\">\r\n        <a\r\n          href=\"https://codencja.herokuapp.com/\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Back to Home Page\r\n        </a>\r\n      </button>\r\n\r\n      <div>\r\n        {\" \"}\r\n        <b>&copy; 2021 </b>\r\n        <i>by</i> <strong>Codencja</strong>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-down shadow-mid-dark\"\r\n        onClick={() => onModalOpen(true)}\r\n      >\r\n        Code info\r\n      </button>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default React.memo(Footer);\r\n","import React, { Component, lazy, Suspense } from \"react\";\n// import Photo from \"./components/Photo\";\nimport Controls from \"./components/Controls\";\n// import axios from \"axios\";\nimport \"./App.css\";\nimport Footer from \"./footer/Footer\";\n\nconst Photo = lazy(() => import(\"./components/Photo\"));\nconst ModalComp = lazy(() => import(\"./footer/ModalComp\"));\n\nexport const ModalContext = React.createContext();\n\nclass App extends Component {\n  state = {\n    img: \"\",\n    blur: \"7\",\n    color: \"#ffcc44\",\n    spacing: \"10\",\n    names: [\"spacing\", \"blur\", \"color\"],\n    modalIsOpen: false,\n  };\n\n  // componentDidMount() {\n  // axios\n  //   .get(\n  //     \"https://images.unsplash.com/photo-1601758282760-b6cc3d07523d?ixid=MXwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80\",\n  //     {\n  //       responseType: \"arraybuffer\",\n  //       ContentType: \"image/jpg\",\n  //     }\n  //   )\n  //   .then((res) => {\n  //     this.setState({ img: res.config.url });\n  //   });\n  // }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleVal = () => {\n    return this.state.spacing;\n  };\n\n  handleModalOpen = (value) => {\n    // console.log(\"handleModalOpen Fn\");\n    this.setState({\n      modalIsOpen: value,\n    });\n  };\n\n  render() {\n    const { blur, color, spacing, modalIsOpen } = this.state;\n\n    return (\n      <div className=\"App\">\n        <main className=\"main p-0 m-0\">\n          <h2\n            className=\"font-weight-bold\"\n            style={{\n              textAlign: \"center\",\n              color: \"aliceblue\",\n              backgroundColor: \"cadetblue\",\n              padding: \"15px\",\n            }}\n          >\n            React App -{\" \"}\n            <span\n              className=\"titleBlur\"\n              style={{ filter: \"blur(\" + blur + \"px)\" }}\n            >\n              Update CSS Vars\n            </span>{\" \"}\n            <span className=\"titleCol\" style={{ color: color }}>\n              with JS\n            </span>\n          </h2>\n          <ModalContext.Provider\n            value={{ onChanging: this.handleChange, onValue: this.state }}\n          >\n            <Controls />\n          </ModalContext.Provider>\n          <Suspense fallback={<p>Loading...</p>}>\n            {/* <Photo sorc={img} onSpacing={spacing} onBgr={color} onBlur={blur} /> */}\n            <Photo onSpacing={spacing} onBgr={color} onBlur={blur} />\n          </Suspense>\n        </main>\n        <Footer onModalOpen={this.handleModalOpen} />\n        <Suspense fallback={<p>Loading...</p>}>\n          <ModalContext.Provider\n            value={{ modalIsOpen, handleModalOpen: this.handleModalOpen }}\n          >\n            <ModalComp\n              isModalOpen={modalIsOpen}\n              handleModalOpen={this.handleModalOpen}\n            />\n          </ModalContext.Provider>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}