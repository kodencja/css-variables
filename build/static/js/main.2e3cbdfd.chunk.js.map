{"version":3,"sources":["reportWebVitals.js","index.js","components/Controls.jsx","footer/Footer.jsx","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","Blur","lazy","Color","BgrCol","Spacing","Transform","ChooseAnim","Controls","useState","hideForm","setHideForm","controlModalContextValue","useContext","ControlModalContext","onChanging","onValue","onOutputStyle","getOutputStyle","inputVal","refObj","unit","undefined","refObjMin","parseInt","getAttribute","refObjMax","left","formStyle","role","className","fallback","onGetOutputStyle","onClick","e","preventDefault","console","log","React","memo","Footer","onModalOpen","type","href","target","rel","Photo","ModalComp","createContext","state","blur","color","bgrCol","skew","skewChanged","rotatex","rotatey","rotatez","spacing","transOrigX","transOrigY","transOrigZ","animation","modalIsOpen","outputStyle","appRef","createRef","handleChange","setState","name","value","setOutputStyle","handleVal","handleModalOpen","skewVal","getComputedStyle","this","current","getPropertyValue","animName","cssProperties","style","ref","filter","Provider","onState","isModalOpen","Component"],"mappings":"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","file":"static/js/main.2e3cbdfd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n// import './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useContext, useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { ControlModalContext } from \"../App\";\r\nconst Blur = lazy(() => import(\"./Blur\"));\r\nconst Color = lazy(() => import(\"./Color\"));\r\nconst BgrCol = lazy(() => import(\"./BgrCol\"));\r\nconst Spacing = lazy(() => import(\"./Spacing\"));\r\nconst Transform = lazy(() => import(\"./Transform\"));\r\nconst ChooseAnim = lazy(() => import(\"./ChooseAnim\"));\r\n\r\nfunction Controls() {\r\n  // console.log(\"Controls Comp.\");\r\n  const [hideForm, setHideForm] = useState(false);\r\n  const controlModalContextValue = useContext(ControlModalContext);\r\n  const { onChanging, onValue, onOutputStyle } = controlModalContextValue;\r\n\r\n  const getOutputStyle = (inputVal, refObj, unit) => {\r\n    if (refObj !== undefined && refObj !== null) {\r\n      let refObjMin = parseInt(refObj.getAttribute(\"min\"));\r\n      let refObjMax = parseInt(refObj.getAttribute(\"max\"));\r\n      if (refObjMin < 0) refObjMin = refObjMin * -1;\r\n      return {\r\n        left:\r\n          ((parseInt(inputVal) + refObjMin) * 100) / (refObjMin + refObjMax) +\r\n          unit,\r\n      };\r\n    }\r\n  };\r\n\r\n  const toggleMenu = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"toggle icon clicked!\");\r\n    setHideForm(!hideForm);\r\n  };\r\n\r\n  const formStyle = hideForm\r\n    ? \"form-group controls px-2 row move-up-mrg\"\r\n    : \"form-group controls px-2 row\";\r\n\r\n  return (\r\n    <div role=\"navigation\" className=\"container-fluid sec1 m-0\">\r\n      <form className=\"py-1 mx-auto\">\r\n        <div className={formStyle}>\r\n          <Suspense fallback={<p>Loading...</p>}>\r\n            <Color onChanging={onChanging} onValue={onValue} />\r\n            <BgrCol onChanging={onChanging} onValue={onValue} />\r\n            <Spacing\r\n              onChanging={onChanging}\r\n              onValue={onValue}\r\n              onOutputStyle={onOutputStyle}\r\n              onGetOutputStyle={getOutputStyle}\r\n            />\r\n            <Blur\r\n              onChanging={onChanging}\r\n              onValue={onValue}\r\n              onOutputStyle={onOutputStyle}\r\n              onGetOutputStyle={getOutputStyle}\r\n            />\r\n            <Transform\r\n              onChanging={onChanging}\r\n              onValue={onValue}\r\n              onOutputStyle={onOutputStyle}\r\n              onGetOutputStyle={getOutputStyle}\r\n            />\r\n          </Suspense>\r\n        </div>\r\n      </form>\r\n      <form className=\"anim-choice my-2\">\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <ChooseAnim onChanging={onChanging} />\r\n          <button className=\"toggle-icon btn\" onClick={toggleMenu}>\r\n            {hideForm ? \"Show\" : \"Hide\"}\r\n          </button>\r\n        </Suspense>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Controls);\r\n","import React from \"react\";\r\nimport(\"./css/footer.css\");\r\n\r\nfunction Footer({ onModalOpen }) {\r\n  // console.log(\"Footer Fn\");\r\n  return (\r\n    <footer className=\"down-buttons text-center\">\r\n      <button type=\"link\" className=\"btn-down home-page-link shadow-mid-dark\">\r\n        <a\r\n          href=\"https://codencja.herokuapp.com/\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Back to Home Page\r\n        </a>\r\n      </button>\r\n\r\n      <div>\r\n        {\" \"}\r\n        <b>&copy; 2021 </b>\r\n        <i>by</i> <strong>Codencja</strong>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-down shadow-mid-dark\"\r\n        onClick={() => onModalOpen(true)}\r\n      >\r\n        Code info\r\n      </button>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default React.memo(Footer);\r\n","import React, { Component, lazy, Suspense } from \"react\";\nimport Controls from \"./components/Controls\";\nimport Footer from \"./footer/Footer\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/style.css'\n\nconst Photo = lazy(() => import(\"./components/Photo\"));\nconst ModalComp = lazy(() => import(\"./footer/ModalComp\"));\n\nexport const ControlModalContext = React.createContext();\n\nclass App extends Component {\n  state = {\n    blur: \"0\",\n    color: \"#f7f9d0\",\n    bgrCol: \"#527198\",\n    skew: 10,\n    skewChanged: false,\n    rotatex: 0,\n    rotatey: 10,\n    rotatez: 15,\n    spacing: 10,\n    transOrigX: 50,\n    transOrigY: 50,\n    transOrigZ: 0,\n    animation: 'animRotateXYZ',\n    modalIsOpen: false,\n    outputStyle: false,\n  };\n\n  appRef = React.createRef();\n\n  componentDidUpdate(){\n    \n    const skewVal = getComputedStyle(this.appRef.current).getPropertyValue(\"--skewVal\");\n\n    const skewValNo = parseInt(skewVal);\n\n    if(skewValNo != this.state.skew){\n      const animName = this.state.animation;\n\n      this.setState({skewChanged: !this.state.skewChanged, animation: 'none'}, ()=>{\n        this.setState({animation: animName});\n      })\n    }  \n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    if(e.target.name === 'skew'){\n      this.setState({skewChanged: !this.state.skewChanged})\n    }\n  };\n\n  setOutputStyle = () =>{\n    // console.log(\"setOutputStyle Fn\")\n    this.setState({outputStyle: !this.state.outputStyle});\n  }\n\n  handleVal = () => {\n    return this.state.spacing;\n  };\n\n  handleModalOpen = (value) => {\n    // console.log(\"handleModalOpen Fn\");\n    this.setState({\n      modalIsOpen: value,\n    });\n  };\n\n  render() {\n    const { blur, modalIsOpen, skewChanged, skew } = this.state;\n    let cssProperties={};\n    if(skewChanged){\n      cssProperties[\"--skewVal\"] = skew;\n    }\n\n\n    return (\n      <div className=\"App\" style={cssProperties} ref={this.appRef}>\n\n        <main className=\"main p-0 m-0\">\n          <div\n            className=\"font-weight-bold p-3 main-title\"\n          >\n            <h2>React Rotate App</h2>\n          \n          <h4>\n          <span\n              className=\"titleBlur\"\n              style={{ filter: \"blur(\" + blur + \"px)\" }}\n            >\n              Update CSS Vars\n            </span>{\" \"}\n            <span className=\"titleCol\">\n              with JS\n            </span>\n          </h4>\n          </div>\n          <ControlModalContext.Provider\n            value={{ onChanging: this.handleChange, onValue: this.state, onOutputStyle: this.setOutputStyle}}\n          >\n            <Controls />\n          </ControlModalContext.Provider>\n          <Suspense fallback={<p>Loading...</p>}>\n            <Photo onState={this.state} />\n          </Suspense>\n        </main>\n        <Footer onModalOpen={this.handleModalOpen} />\n        <Suspense fallback={<p>Loading...</p>}>\n          <ControlModalContext.Provider\n            value={{ modalIsOpen, handleModalOpen: this.handleModalOpen }}\n          >\n            <ModalComp\n              isModalOpen={modalIsOpen}\n              handleModalOpen={this.handleModalOpen}\n            />\n          </ControlModalContext.Provider>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}