{"version":3,"sources":["components/Blur.jsx"],"names":["areEqual","prevProps","nextProps","onValue","blur","outputStyle","Blur","props","blurRef","useRef","onChanging","onGetOutputStyle","onOutputStyle","useEffect","React","useMemo","className","htmlFor","id","type","name","min","max","onChange","value","data-sizing","ref","style","current","memo"],"mappings":"uJAEA,SAASA,EAASC,EAAWC,GAC3B,OACED,EAAUE,QAAQC,OAASF,EAAUC,QAAQC,MAC7CH,EAAUE,QAAQE,cAAgBH,EAAUC,QAAQE,YAIxD,SAASC,EAAKC,GACZ,IAAMC,EAAUC,mBACRC,EAAyDH,EAAzDG,WAAYP,EAA6CI,EAA7CJ,QAASQ,EAAoCJ,EAApCI,iBAAkBC,EAAkBL,EAAlBK,cAQ/C,OALAC,qBAAU,WAERD,MACC,IAEIE,IAAMC,SACX,kBACE,qBAAKC,UAAU,+CAAf,SACE,sBAAKA,UAAU,cAAf,UACE,uBAAOC,QAAQ,OAAf,kBACA,uBACED,UAAU,qBACVE,GAAG,OACHC,KAAK,QACLC,KAAK,OACLC,IAAI,IACJC,IAAI,KACJC,SAAUb,EACVc,MAAOrB,EAAQC,KACfqB,cAAY,KACZC,IAAKlB,IAEP,wBACEQ,UAAU,SACVW,MAAOhB,EAAiBR,EAAQC,KAAMI,EAAQoB,QAAS,KAFzD,SAIGzB,EAAQC,KAAO,cAKxB,CAACM,EAAYP,EAAQC,KAAMD,EAAQE,cAIxBS,cAAMe,KAAKvB,EAAMN","file":"static/js/9.b4473545.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return (\r\n    prevProps.onValue.blur === nextProps.onValue.blur &&\r\n    prevProps.onValue.outputStyle === nextProps.onValue.outputStyle\r\n  );\r\n}\r\n\r\nfunction Blur(props) {\r\n  const blurRef = useRef();\r\n  const { onChanging, onValue, onGetOutputStyle, onOutputStyle } = props;\r\n  // console.log(\"Blur Comp\");\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect in Blur Comp\");\r\n    onOutputStyle();\r\n  }, []);\r\n\r\n  return React.useMemo(\r\n    () => (\r\n      <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n        <div className=\"input-block\">\r\n          <label htmlFor=\"blur\">Blur</label>\r\n          <input\r\n            className=\"form-control-range\"\r\n            id=\"blur\"\r\n            type=\"range\"\r\n            name=\"blur\"\r\n            min=\"0\"\r\n            max=\"30\"\r\n            onChange={onChanging}\r\n            value={onValue.blur}\r\n            data-sizing=\"px\"\r\n            ref={blurRef}\r\n          />\r\n          <output\r\n            className=\"bubble\"\r\n            style={onGetOutputStyle(onValue.blur, blurRef.current, \"%\")}\r\n          >\r\n            {onValue.blur + \"px\"}\r\n          </output>\r\n        </div>\r\n      </div>\r\n    ),\r\n    [onChanging, onValue.blur, onValue.outputStyle]\r\n  );\r\n}\r\n\r\nexport default React.memo(Blur, areEqual);\r\n// export default React.memo(Blur);\r\n"],"sourceRoot":""}