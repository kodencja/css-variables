[{"C:\\CODING\\React\\css-variables\\src\\index.js":"1","C:\\CODING\\React\\css-variables\\src\\App.js":"2","C:\\CODING\\React\\css-variables\\src\\reportWebVitals.js":"3","C:\\CODING\\React\\css-variables\\src\\footer\\ModalComp.js":"4","C:\\CODING\\React\\css-variables\\src\\footer\\Footer.jsx":"5","C:\\CODING\\React\\css-variables\\src\\footer\\ModalContent.js":"6","C:\\CODING\\React\\css-variables\\src\\components\\Photo\\Photo.jsx":"7","C:\\CODING\\React\\css-variables\\src\\components\\Controls\\Controls.jsx":"8","C:\\CODING\\React\\css-variables\\src\\components\\Color\\Color.jsx":"9","C:\\CODING\\React\\css-variables\\src\\components\\Blur\\Blur.jsx":"10","C:\\CODING\\React\\css-variables\\src\\components\\BgrCol\\BgrCol.jsx":"11","C:\\CODING\\React\\css-variables\\src\\components\\Spacing\\Spacing.jsx":"12","C:\\CODING\\React\\css-variables\\src\\components\\Transform\\Transform.jsx":"13","C:\\CODING\\React\\css-variables\\src\\components\\ChooseAnim\\ChooseAnim.jsx":"14","C:\\CODING\\React\\css-variables\\src\\components\\Header\\Header.jsx":"15","C:\\CODING\\React\\css-variables\\src\\components\\subHeader\\SubHeader.jsx":"16"},{"size":520,"mtime":1628885129921,"results":"17","hashOfConfig":"18"},{"size":4238,"mtime":1632391159790,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":699,"mtime":1628885129894,"results":"21","hashOfConfig":"18"},{"size":814,"mtime":1628885129889,"results":"22","hashOfConfig":"18"},{"size":1692,"mtime":1628885129899,"results":"23","hashOfConfig":"18"},{"size":2603,"mtime":1632391219694,"results":"24","hashOfConfig":"18"},{"size":3258,"mtime":1632566865497,"results":"25","hashOfConfig":"18"},{"size":843,"mtime":1632463288185,"results":"26","hashOfConfig":"18"},{"size":1779,"mtime":1632566635141,"results":"27","hashOfConfig":"18"},{"size":860,"mtime":1632402849411,"results":"28","hashOfConfig":"18"},{"size":1320,"mtime":1632462115227,"results":"29","hashOfConfig":"18"},{"size":8010,"mtime":1632566492024,"results":"30","hashOfConfig":"18"},{"size":2649,"mtime":1632567478669,"results":"31","hashOfConfig":"18"},{"size":585,"mtime":1630933179706,"results":"32","hashOfConfig":"18"},{"size":638,"mtime":1630924221969,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1l54xgl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\CODING\\React\\css-variables\\src\\index.js",[],["73","74"],"C:\\CODING\\React\\css-variables\\src\\App.js",["75","76"],"import React, { Component, lazy, Suspense } from \"react\";\r\nimport Controls from \"./components/Controls/Controls\";\r\nimport Footer from \"./footer/Footer\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/style.css\";\r\nimport Header from \"./components/Header/Header\";\r\nimport SubHeader from \"./components/subHeader/SubHeader\";\r\n\r\nconst Photo = lazy(() => import(\"./components/Photo/Photo\"));\r\nconst ModalComp = lazy(() => import(\"./footer/ModalComp\"));\r\n\r\nexport const ControlModalContext = React.createContext();\r\n\r\nclass App extends Component {\r\n  state = {\r\n    blur: \"0\",\r\n    color: \"#f7f9d0\",\r\n    bgrCol: \"#527198\",\r\n    skew: 10,\r\n    skewChanged: false,\r\n    rotatex: 0,\r\n    rotatey: 10,\r\n    rotatez: 15,\r\n    spacing: 10,\r\n    transOrigX: 50,\r\n    transOrigY: 50,\r\n    transOrigZ: 0,\r\n    currentAnimation: \"animRotateXYZ\",\r\n    modalIsOpen: false,\r\n    outputStyle: false,\r\n    options: [\r\n      \"none\",\r\n      'rotate',\r\n      \"rotate-X\",\r\n      \"rotate-Y\",\r\n      \"rotate-Z\",\r\n      \"rotate-X-Y\",\r\n      \"rotate-Y-X\",\r\n      \"rotate-X-Z\",\r\n      \"rotate-Z-X\",\r\n      \"rotate-Y-Z\",\r\n      \"rotate-Z-Y\",\r\n      \"rotate-X-Y-Z\",\r\n      \"rotate-X-Z-Y\",\r\n      \"rotate-Y-X-Z\",\r\n      \"rotate-Y-Z-X\",\r\n      \"rotate-Z-X-Y\",\r\n      \"rotate-Z-Y-X\",\r\n    ],\r\n    optionsValues: [\r\n      \"none\",\r\n      \"animRotate\",\r\n      \"animRotateX\",\r\n      \"animRotateY\",\r\n      \"animRotateZ\",\r\n      \"animRotateXY\",\r\n      \"animRotateXY\",\r\n      \"animRotateXZ\",\r\n      \"animRotateZX\",\r\n      \"animRotateYZ\",\r\n      \"animRotateZY\",\r\n      \"animRotateXYZ\",\r\n      \"animRotateXZY\",\r\n      \"animRotateYXZ\",\r\n      \"animRotateYZX\",\r\n      \"animRotateZXY\",\r\n      \"animRotateZYX\",\r\n    ],\r\n  };\r\n\r\n  appRef = React.createRef();\r\n\r\n  componentDidUpdate() {\r\n    const skewVal = getComputedStyle(this.appRef.current).getPropertyValue(\r\n      \"--skewVal\"\r\n    );\r\n\r\n    const skewValNo = parseInt(skewVal);\r\n\r\n    if (skewValNo != this.state.skew) {\r\n      const animName = this.state.currentAnimation;\r\n\r\n      this.setState(\r\n        { skewChanged: !this.state.skewChanged, currentAnimation: \"none\" },\r\n        () => {\r\n          this.setState({ currentAnimation: animName });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    if (e.target.name === \"skew\") {\r\n      this.setState({ skewChanged: !this.state.skewChanged });\r\n    }\r\n  };\r\n\r\n  setOutputStyle = () => {\r\n    // console.log(\"setOutputStyle Fn\")\r\n    this.setState({ outputStyle: !this.state.outputStyle });\r\n  };\r\n\r\n  handleVal = () => {\r\n    return this.state.spacing;\r\n  };\r\n\r\n  handleModalOpen = (value) => {\r\n    // console.log(\"handleModalOpen Fn\");\r\n    this.setState({\r\n      modalIsOpen: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { blur, modalIsOpen, skewChanged, skew } = this.state;\r\n    let cssProperties = {};\r\n    if (skewChanged) {\r\n      cssProperties[\"--skewVal\"] = skew;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\" style={cssProperties} ref={this.appRef}>\r\n        <main className=\"main p-0 m-0\">\r\n\r\n          <ControlModalContext.Provider\r\n            value={{\r\n              onChanging: this.handleChange,\r\n              onValue: this.state,\r\n              onOutputStyle: this.setOutputStyle,\r\n            }}\r\n          >\r\n            <Header text=\"React Rotate App\">\r\n              <h4>\r\n                <SubHeader classN=\"titleBlur\" text=\"Update CSS Vars \" />\r\n                <SubHeader classN=\"titleCol\" text=\"with JS \" />\r\n              </h4>\r\n            </Header>\r\n            <Controls />\r\n          </ControlModalContext.Provider>\r\n\r\n          <Suspense fallback={<p>Loading...</p>}>\r\n            <Photo onState={this.state} />\r\n          </Suspense>\r\n\r\n        </main>\r\n        \r\n        <Footer onModalOpen={this.handleModalOpen} />\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <ControlModalContext.Provider\r\n            value={{ modalIsOpen, handleModalOpen: this.handleModalOpen }}\r\n          >\r\n            <ModalComp\r\n              isModalOpen={modalIsOpen}\r\n              handleModalOpen={this.handleModalOpen}\r\n            />\r\n          </ControlModalContext.Provider>\r\n        </Suspense>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\CODING\\React\\css-variables\\src\\reportWebVitals.js",[],"C:\\CODING\\React\\css-variables\\src\\footer\\ModalComp.js",[],"C:\\CODING\\React\\css-variables\\src\\footer\\Footer.jsx",[],"C:\\CODING\\React\\css-variables\\src\\footer\\ModalContent.js",[],"C:\\CODING\\React\\css-variables\\src\\components\\Photo\\Photo.jsx",[],"C:\\CODING\\React\\css-variables\\src\\components\\Controls\\Controls.jsx",["77"],"import React, { useContext, useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { ControlModalContext } from \"../../App\";\r\nconst Blur = lazy(() => import(\"../Blur/Blur\"));\r\nconst Color = lazy(() => import(\"../Color/Color\"));\r\nconst BgrCol = lazy(() => import(\"../BgrCol/BgrCol\"));\r\nconst Spacing = lazy(() => import(\"../Spacing/Spacing\"));\r\nconst Transform = lazy(() => import(\"../Transform/Transform\"));\r\nconst ChooseAnim = lazy(() => import(\"../ChooseAnim/ChooseAnim\"));\r\n\r\nfunction Controls() {\r\n  // console.log(\"Controls Comp.\");\r\n  const [hideForm, setHideForm] = useState(false);\r\n  const controlModalContextValue = useContext(ControlModalContext);\r\n  const { onChanging, onValue, onOutputStyle } = controlModalContextValue;\r\n\r\n  const getOutputStyle = (inputVal, refObj, unit) => {\r\n    if (refObj !== undefined && refObj !== null) {\r\n      let refObjMin = parseInt(refObj.getAttribute(\"min\"));\r\n      let refObjMax = parseInt(refObj.getAttribute(\"max\"));\r\n      if (refObjMin < 0) refObjMin = refObjMin * -1;\r\n\r\n      return {\r\n        left:\r\n          ((parseInt(inputVal) + refObjMin) * 100) / (refObjMin + refObjMax) +\r\n          unit,\r\n      };\r\n    }\r\n  };\r\n\r\n  const toggleMenu = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"toggle icon clicked!\");\r\n    setHideForm(!hideForm);\r\n  };\r\n\r\n  const formStyle = hideForm\r\n    ? \"form-group controls px-2 row move-up-mrg\"\r\n    : \"form-group controls px-2 row\";\r\n\r\n  return (\r\n    <div role=\"navigation\" className=\"container-fluid sec1 m-0\">\r\n      <form className=\"all-inputs py-1 mx-auto\">\r\n        <div className={formStyle} data-testid=\"main-inputs\">\r\n          <Suspense fallback={<p>Loading...</p>}>\r\n            <Color onChanging={onChanging} onValue={onValue} />\r\n            <BgrCol onChanging={onChanging} onValue={onValue} />\r\n            <Spacing\r\n              onChanging={onChanging}\r\n              onValue={onValue}\r\n              onOutputStyle={onOutputStyle}\r\n              onGetOutputStyle={getOutputStyle}\r\n            />\r\n            <Blur\r\n              onChanging={onChanging}\r\n              onValue={onValue}\r\n              onOutputStyle={onOutputStyle}\r\n              onGetOutputStyle={getOutputStyle}\r\n            />\r\n            <Transform\r\n              onChanging={onChanging}\r\n              onValue={onValue}\r\n              onOutputStyle={onOutputStyle}\r\n              onGetOutputStyle={getOutputStyle}\r\n            />\r\n          </Suspense>\r\n        </div>\r\n      </form>\r\n      <form className=\"anim-choice my-2\" data-testid=\"anim-choice\">\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          {/* <ChooseAnim onChanging={onChanging} onState={onValue} /> */}\r\n          <ChooseAnim\r\n            onChanging={onChanging}\r\n            options={onValue.options}\r\n            optionsValues={onValue.optionsValues}\r\n            // options={onValue && onValue.options}\r\n            // optionsValues={onValue && onValue.optionsValues}\r\n          />\r\n          <button\r\n            className=\"toggle-icon btn\"\r\n            onClick={toggleMenu}\r\n            data-testid=\"btn-menu\"\r\n          >\r\n            {hideForm ? \"Show\" : \"Hide\"}\r\n          </button>\r\n        </Suspense>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Controls);\r\n","C:\\CODING\\React\\css-variables\\src\\components\\Color\\Color.jsx",[],"C:\\CODING\\React\\css-variables\\src\\components\\Blur\\Blur.jsx",["78","79","80"],"import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return (\r\n    prevProps.onValue.blur === nextProps.onValue.blur &&\r\n    prevProps.onValue.outputStyle === nextProps.onValue.outputStyle\r\n  );\r\n}\r\n\r\nfunction Blur(props) {\r\n  const blurRef = useRef();\r\n  // const { onChanging, blur, onGetOutputStyle, onOutputStyle } = props;\r\n  const { onChanging, onValue, onGetOutputStyle, onOutputStyle } = props;\r\n  // const [blurVal, setBlurVal] = useState(\"0\");\r\n  // console.log(\"Blur Comp\");\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect in Blur Comp\");\r\n    onOutputStyle();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(onGetOutputStyle(onValue.blur, blurRef.current, \"%\"));\r\n  //   // setBlurVal(onValue.blur);\r\n  // }, [onOutputStyle, onGetOutputStyle]);\r\n\r\n  return React.useMemo(\r\n    () => (\r\n      <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n        <div className=\"input-block\">\r\n          <label htmlFor=\"blur\">Blur</label>\r\n          <input\r\n            className=\"form-control-range\"\r\n            aria-label=\"blur\"\r\n            id=\"blur\"\r\n            type=\"range\"\r\n            name=\"blur\"\r\n            min=\"0\"\r\n            max=\"30\"\r\n            onChange={onChanging}\r\n            value={onValue.blur}\r\n            data-sizing=\"px\"\r\n            ref={blurRef}\r\n          />\r\n          <output\r\n            name=\"blur-output\"\r\n            className=\"bubble\"\r\n            style={onGetOutputStyle(onValue.blur, blurRef.current, \"%\")}\r\n            data-testid=\"blur-output\"\r\n          >\r\n            {onValue.blur}px\r\n          </output>\r\n        </div>\r\n      </div>\r\n    ),\r\n    [onChanging, onValue.blur, onValue.outputStyle]\r\n  );\r\n}\r\n\r\nexport default React.memo(Blur, areEqual);\r\n","C:\\CODING\\React\\css-variables\\src\\components\\BgrCol\\BgrCol.jsx",[],"C:\\CODING\\React\\css-variables\\src\\components\\Spacing\\Spacing.jsx",["81"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return (\r\n    prevProps.onValue.spacing === nextProps.onValue.spacing &&\r\n    prevProps.onValue.outputStyle === nextProps.onValue.outputStyle\r\n  );\r\n}\r\n\r\nfunction Spacing(props) {\r\n  const { onChanging, onValue, onGetOutputStyle, onOutputStyle } = props;\r\n  // console.log(\"Spacing Comp.\");\r\n  const spacingRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect in Spacing Comp\");\r\n    onOutputStyle();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n      <div className=\"input-block\">\r\n        <label htmlFor=\"spacing\">Spacing</label>\r\n        <input\r\n          className=\"form-control-range\"\r\n          id=\"spacing\"\r\n          type=\"range\"\r\n          name=\"spacing\"\r\n          min=\"0\"\r\n          max=\"150\"\r\n          onChange={onChanging}\r\n          value={onValue.spacing}\r\n          data-sizing=\"px\"\r\n          ref={spacingRef}\r\n        />\r\n        <output\r\n          data-testid=\"spacing-output\"\r\n          className=\"bubble\"\r\n          style={onGetOutputStyle(onValue.spacing, spacingRef.current, \"%\")}\r\n        >\r\n          {onValue.spacing + \"px\"}\r\n        </output>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Spacing, areEqual);\r\n","C:\\CODING\\React\\css-variables\\src\\components\\Transform\\Transform.jsx",["82"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return (\r\n    prevProps.onValue.rotatex === nextProps.onValue.rotatex &&\r\n    prevProps.onValue.rotatey === nextProps.onValue.rotatey &&\r\n    prevProps.onValue.rotatez === nextProps.onValue.rotatez &&\r\n    prevProps.onValue.transOrigX === nextProps.onValue.transOrigX &&\r\n    prevProps.onValue.transOrigY === nextProps.onValue.transOrigY &&\r\n    prevProps.onValue.transOrigZ === nextProps.onValue.transOrigZ &&\r\n    prevProps.onValue.outputStyle === nextProps.onValue.outputStyle &&\r\n    prevProps.onValue.skew === nextProps.onValue.skew\r\n  );\r\n}\r\n\r\nfunction Transform(props) {\r\n  const transOrigXRef = useRef();\r\n  const transOrigYRef = useRef();\r\n  const transOrigZRef = useRef();\r\n  const rotateXRef = useRef();\r\n  const rotateYRef = useRef();\r\n  const rotateZRef = useRef();\r\n  const skewRef = useRef();\r\n\r\n  const { onChanging, onValue, onOutputStyle, onGetOutputStyle } = props;\r\n  // console.log(\"Transform Comp.\");\r\n\r\n  useEffect(() => {\r\n    onOutputStyle();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"transOrigX\">TransOrig-X</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"transOrigX\"\r\n              aria-label=\"trans-orig-x\"\r\n              type=\"range\"\r\n              name=\"transOrigX\"\r\n              min=\"-100\"\r\n              max=\"100\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.transOrigX}\r\n              ref={transOrigXRef}\r\n              data-testid=\"transform-origin\"\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={\r\n                // left: ((parseInt(onValue.transOrigX) + 100) * 100) / 200 + \"%\",\r\n                onGetOutputStyle(onValue.transOrigX, transOrigXRef.current, \"%\")\r\n                // { position: \"absolute\", left: \"55%\" }\r\n              }\r\n              // data-testid=\"trans-orig-x-output\"\r\n              data-testid=\"trans-orig-output\"\r\n            >\r\n              {onValue.transOrigX + \"%\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"transOrigY\">TransOrig-Y</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              aria-label=\"trans-orig-y\"\r\n              id=\"transOrigY\"\r\n              type=\"range\"\r\n              name=\"transOrigY\"\r\n              min=\"-100\"\r\n              max=\"100\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.transOrigY}\r\n              ref={transOrigYRef}\r\n              data-testid=\"transform-origin\"\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={onGetOutputStyle(\r\n                onValue.transOrigY,\r\n                transOrigYRef.current,\r\n                \"%\"\r\n              )}\r\n              // data-testid=\"trans-orig-y-output\"\r\n              data-testid=\"trans-orig-output\"\r\n            >\r\n              {onValue.transOrigY + \"%\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"transOrigZ\">TransOrig-Z</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"transOrigZ\"\r\n              aria-label=\"trans-orig-z\"\r\n              type=\"range\"\r\n              name=\"transOrigZ\"\r\n              min=\"-100\"\r\n              max=\"100\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.transOrigZ}\r\n              ref={transOrigZRef}\r\n              data-testid=\"transform-origin\"\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={onGetOutputStyle(\r\n                onValue.transOrigZ,\r\n                transOrigZRef.current,\r\n                \"%\"\r\n              )}\r\n              // data-testid=\"trans-orig-z-output\"\r\n              data-testid=\"trans-orig-output\"\r\n            >\r\n              {onValue.transOrigZ + \"px\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n      </>\r\n\r\n      <>\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"rotatex\">Rotate X</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              aria-label=\"rotate-x\"\r\n              id=\"rotatex\"\r\n              type=\"range\"\r\n              name=\"rotatex\"\r\n              min=\"-180\"\r\n              max=\"180\"\r\n              data-sizing=\"%\"\r\n              onChange={onChanging}\r\n              value={onValue.rotatex}\r\n              ref={rotateXRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={onGetOutputStyle(onValue.rotatex, rotateXRef.current, \"%\")}\r\n              data-testid=\"rotate-x-output\"\r\n            >\r\n              {onValue.rotatex + \"deg\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"rotatey\">Rotate Y</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"rotatey\"\r\n              aria-label=\"rotate-y\"\r\n              type=\"range\"\r\n              name=\"rotatey\"\r\n              min=\"-180\"\r\n              max=\"180\"\r\n              data-sizing=\"%\"\r\n              onChange={onChanging}\r\n              value={onValue.rotatey}\r\n              ref={rotateYRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={onGetOutputStyle(onValue.rotatey, rotateYRef.current, \"%\")}\r\n              data-testid=\"rotate-y-output\"\r\n            >\r\n              {onValue.rotatey + \"deg\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"rotatez\">Rotate Z</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"rotatez\"\r\n              aria-label=\"rotate-z\"\r\n              type=\"range\"\r\n              name=\"rotatez\"\r\n              min=\"-180\"\r\n              max=\"180\"\r\n              // data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.rotatez}\r\n              ref={rotateZRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={onGetOutputStyle(onValue.rotatez, rotateZRef.current, \"%\")}\r\n              data-testid=\"rotate-z-output\"\r\n            >\r\n              {onValue.rotatez + \"deg\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"skew\">Skew</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"skew\"\r\n              aria-label=\"skew\"\r\n              type=\"range\"\r\n              name=\"skew\"\r\n              min=\"-90\"\r\n              max=\"90\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.skew}\r\n              ref={skewRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              data-testid=\"skew-output\"\r\n              style={\r\n                onGetOutputStyle(onValue.skew, skewRef.current, \"%\")\r\n                //  left: ((parseInt(onValue.skew) + 90) * 100) / 180 + \"%\"\r\n              }\r\n            >\r\n              {onValue.skew + \"deg\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Transform, areEqual);\r\n","C:\\CODING\\React\\css-variables\\src\\components\\ChooseAnim\\ChooseAnim.jsx",["83"],"C:\\CODING\\React\\css-variables\\src\\components\\Header\\Header.jsx",["84"],"import React from \"react\";\r\nimport SubHeader from \"../subHeader/SubHeader\";\r\n\r\n// jesli damy tylko jeden <h2>{text}</h2> to test no 3 przejdzie\r\nfunction Header({ text, children }) {\r\n  return (\r\n    <div\r\n      title=\"main\"\r\n      data-testid={\"header-1\"}\r\n      className=\"font-weight-bold p-3 main-title\"\r\n    >\r\n      <h2>{text}</h2>\r\n      <h2>Rotating</h2>\r\n\r\n      {/* <h4>\r\n        <SubHeader classN=\"titleBlur\" text=\"Update CSS Vars\" />\r\n        <SubHeader classN=\"titleCol\" text=\"with JS\" />\r\n      </h4> */}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\CODING\\React\\css-variables\\src\\components\\subHeader\\SubHeader.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":80,"column":19,"nodeType":"91","messageId":"92","endLine":80,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":116,"column":13,"nodeType":"95","messageId":"96","endLine":116,"endColumn":17},{"ruleId":"93","severity":1,"message":"97","line":1,"column":39,"nodeType":"95","messageId":"96","endLine":1,"endColumn":48},{"ruleId":"93","severity":1,"message":"98","line":1,"column":36,"nodeType":"95","messageId":"96","endLine":1,"endColumn":44},{"ruleId":"99","severity":1,"message":"100","line":20,"column":6,"nodeType":"101","endLine":20,"endColumn":8,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":56,"column":5,"nodeType":"101","endLine":56,"endColumn":52,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"100","line":18,"column":6,"nodeType":"101","endLine":18,"endColumn":8,"suggestions":"105"},{"ruleId":"99","severity":1,"message":"100","line":30,"column":6,"nodeType":"101","endLine":30,"endColumn":8,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"107","line":28,"column":6,"nodeType":"101","endLine":28,"endColumn":8,"suggestions":"108"},{"ruleId":"93","severity":1,"message":"109","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":17},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'blur' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onOutputStyle'. Either include it or remove the dependency array.","ArrayExpression",["112"],"React Hook React.useMemo has a missing dependency: 'onGetOutputStyle'. Either include it or remove the dependency array.",["113"],["114"],["115"],"React Hook useMemo has missing dependencies: 'options' and 'optionsValues'. Either include them or remove the dependency array.",["116"],"'SubHeader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"117","fix":"121"},{"desc":"117","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [onOutputStyle]",{"range":"125","text":"126"},"Update the dependencies array to be: [onChanging, onGetOutputStyle, onValue.blur]",{"range":"127","text":"128"},{"range":"129","text":"126"},{"range":"130","text":"126"},"Update the dependencies array to be: [options, optionsValues]",{"range":"131","text":"132"},[639,641],"[onOutputStyle]",[1675,1722],"[onChanging, onGetOutputStyle, onValue.blur]",[522,524],[1072,1074],[682,684],"[options, optionsValues]"]