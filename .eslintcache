[{"C:\\CODING\\React\\css-variables\\src\\index.js":"1","C:\\CODING\\React\\css-variables\\src\\App.js":"2","C:\\CODING\\React\\css-variables\\src\\reportWebVitals.js":"3","C:\\CODING\\React\\css-variables\\src\\footer\\ModalComp.js":"4","C:\\CODING\\React\\css-variables\\src\\footer\\Footer.jsx":"5","C:\\CODING\\React\\css-variables\\src\\footer\\ModalContent.js":"6","C:\\CODING\\React\\css-variables\\src\\components\\Photo\\Photo.jsx":"7","C:\\CODING\\React\\css-variables\\src\\components\\Controls\\Controls.jsx":"8","C:\\CODING\\React\\css-variables\\src\\components\\Color\\Color.jsx":"9","C:\\CODING\\React\\css-variables\\src\\components\\Blur\\Blur.jsx":"10","C:\\CODING\\React\\css-variables\\src\\components\\BgrCol\\BgrCol.jsx":"11","C:\\CODING\\React\\css-variables\\src\\components\\Spacing\\Spacing.jsx":"12","C:\\CODING\\React\\css-variables\\src\\components\\Transform\\Transform.jsx":"13","C:\\CODING\\React\\css-variables\\src\\components\\ChooseAnim\\ChooseAnim.jsx":"14","C:\\CODING\\React\\css-variables\\src\\components\\Header\\Header.jsx":"15","C:\\CODING\\React\\css-variables\\src\\components\\subHeader\\SubHeader.jsx":"16"},{"size":520,"mtime":1628885129921,"results":"17","hashOfConfig":"18"},{"size":4670,"mtime":1630924638670,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":699,"mtime":1628885129894,"results":"21","hashOfConfig":"18"},{"size":814,"mtime":1628885129889,"results":"22","hashOfConfig":"18"},{"size":1692,"mtime":1628885129899,"results":"23","hashOfConfig":"18"},{"size":2603,"mtime":1630912273056,"results":"24","hashOfConfig":"18"},{"size":2837,"mtime":1630912283068,"results":"25","hashOfConfig":"18"},{"size":761,"mtime":1630912266622,"results":"26","hashOfConfig":"18"},{"size":1400,"mtime":1630912260537,"results":"27","hashOfConfig":"18"},{"size":770,"mtime":1630912257148,"results":"28","hashOfConfig":"18"},{"size":1280,"mtime":1630912275341,"results":"29","hashOfConfig":"18"},{"size":7073,"mtime":1630912277731,"results":"30","hashOfConfig":"18"},{"size":1850,"mtime":1630912362398,"results":"31","hashOfConfig":"18"},{"size":429,"mtime":1630924441688,"results":"32","hashOfConfig":"18"},{"size":638,"mtime":1630924221969,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1l54xgl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\CODING\\React\\css-variables\\src\\index.js",[],["72","73"],"C:\\CODING\\React\\css-variables\\src\\App.js",["74","75"],"C:\\CODING\\React\\css-variables\\src\\reportWebVitals.js",[],"C:\\CODING\\React\\css-variables\\src\\footer\\ModalComp.js",[],"C:\\CODING\\React\\css-variables\\src\\footer\\Footer.jsx",[],"C:\\CODING\\React\\css-variables\\src\\footer\\ModalContent.js",[],"C:\\CODING\\React\\css-variables\\src\\components\\Photo\\Photo.jsx",[],"C:\\CODING\\React\\css-variables\\src\\components\\Controls\\Controls.jsx",["76"],"import React, { useContext, useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { ControlModalContext } from \"../../App\";\r\nconst Blur = lazy(() => import(\"../Blur/Blur\"));\r\nconst Color = lazy(() => import(\"../Color/Color\"));\r\nconst BgrCol = lazy(() => import(\"../BgrCol/BgrCol\"));\r\nconst Spacing = lazy(() => import(\"../Spacing/Spacing\"));\r\nconst Transform = lazy(() => import(\"../Transform/Transform\"));\r\nconst ChooseAnim = lazy(() => import(\"../ChooseAnim/ChooseAnim\"));\r\n\r\nfunction Controls() {\r\n  // console.log(\"Controls Comp.\");\r\n  const [hideForm, setHideForm] = useState(false);\r\n  const controlModalContextValue = useContext(ControlModalContext);\r\n  const { onChanging, onValue, onOutputStyle } = controlModalContextValue;\r\n\r\n  const getOutputStyle = (inputVal, refObj, unit) => {\r\n    if (refObj !== undefined && refObj !== null) {\r\n      let refObjMin = parseInt(refObj.getAttribute(\"min\"));\r\n      let refObjMax = parseInt(refObj.getAttribute(\"max\"));\r\n      if (refObjMin < 0) refObjMin = refObjMin * -1;\r\n      return {\r\n        left:\r\n          ((parseInt(inputVal) + refObjMin) * 100) / (refObjMin + refObjMax) +\r\n          unit,\r\n      };\r\n    }\r\n  };\r\n\r\n  const toggleMenu = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"toggle icon clicked!\");\r\n    setHideForm(!hideForm);\r\n  };\r\n\r\n  const formStyle = hideForm\r\n    ? \"form-group controls px-2 row move-up-mrg\"\r\n    : \"form-group controls px-2 row\";\r\n\r\n  return (\r\n    <div role=\"navigation\" className=\"container-fluid sec1 m-0\">\r\n      <form className=\"all-inputs py-1 mx-auto\">\r\n        <div className={formStyle}>\r\n          <Suspense fallback={<p>Loading...</p>}>\r\n            <Color onChanging={onChanging} onValue={onValue} />\r\n            <BgrCol onChanging={onChanging} onValue={onValue} />\r\n            <Spacing\r\n              onChanging={onChanging}\r\n              onValue={onValue}\r\n              onOutputStyle={onOutputStyle}\r\n              onGetOutputStyle={getOutputStyle}\r\n            />\r\n            <Blur\r\n              onChanging={onChanging}\r\n              onValue={onValue}\r\n              onOutputStyle={onOutputStyle}\r\n              onGetOutputStyle={getOutputStyle}\r\n            />\r\n            <Transform\r\n              onChanging={onChanging}\r\n              onValue={onValue}\r\n              onOutputStyle={onOutputStyle}\r\n              onGetOutputStyle={getOutputStyle}\r\n            />\r\n          </Suspense>\r\n        </div>\r\n      </form>\r\n      <form className=\"anim-choice my-2\">\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <ChooseAnim onChanging={onChanging} onState={onValue} />\r\n          <button className=\"toggle-icon btn\" onClick={toggleMenu}>\r\n            {hideForm ? \"Show\" : \"Hide\"}\r\n          </button>\r\n        </Suspense>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Controls);\r\n","C:\\CODING\\React\\css-variables\\src\\components\\Color\\Color.jsx",[],"C:\\CODING\\React\\css-variables\\src\\components\\Blur\\Blur.jsx",["77","78"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return (\r\n    prevProps.onValue.blur === nextProps.onValue.blur &&\r\n    prevProps.onValue.outputStyle === nextProps.onValue.outputStyle\r\n  );\r\n}\r\n\r\nfunction Blur(props) {\r\n  const blurRef = useRef();\r\n  const { onChanging, onValue, onGetOutputStyle, onOutputStyle } = props;\r\n  // console.log(\"Blur Comp\");\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect in Blur Comp\");\r\n    onOutputStyle();\r\n  }, []);\r\n\r\n  return React.useMemo(\r\n    () => (\r\n      <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n        <div className=\"input-block\">\r\n          <label htmlFor=\"blur\">Blur</label>\r\n          <input\r\n            className=\"form-control-range\"\r\n            id=\"blur\"\r\n            type=\"range\"\r\n            name=\"blur\"\r\n            min=\"0\"\r\n            max=\"30\"\r\n            onChange={onChanging}\r\n            value={onValue.blur}\r\n            data-sizing=\"px\"\r\n            ref={blurRef}\r\n          />\r\n          <output\r\n            className=\"bubble\"\r\n            style={onGetOutputStyle(onValue.blur, blurRef.current, \"%\")}\r\n          >\r\n            {onValue.blur + \"px\"}\r\n          </output>\r\n        </div>\r\n      </div>\r\n    ),\r\n    [onChanging, onValue.blur, onValue.outputStyle]\r\n  );\r\n}\r\n\r\nexport default React.memo(Blur, areEqual);\r\n// export default React.memo(Blur);\r\n","C:\\CODING\\React\\css-variables\\src\\components\\BgrCol\\BgrCol.jsx",[],"C:\\CODING\\React\\css-variables\\src\\components\\Spacing\\Spacing.jsx",["79"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return (\r\n    prevProps.onValue.spacing === nextProps.onValue.spacing &&\r\n    prevProps.onValue.outputStyle === nextProps.onValue.outputStyle\r\n  );\r\n}\r\n\r\nfunction Spacing(props) {\r\n  const { onChanging, onValue, onGetOutputStyle, onOutputStyle } = props;\r\n  // console.log(\"Spacing Comp.\");\r\n  const spacingRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect in Spacing Comp\");\r\n    onOutputStyle();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n      <div className=\"input-block\">\r\n        <label htmlFor=\"spacing\">Spacing</label>\r\n        <input\r\n          className=\"form-control-range\"\r\n          id=\"spacing\"\r\n          type=\"range\"\r\n          name=\"spacing\"\r\n          min=\"0\"\r\n          max=\"150\"\r\n          onChange={onChanging}\r\n          value={onValue.spacing}\r\n          data-sizing=\"px\"\r\n          ref={spacingRef}\r\n        />\r\n        <output\r\n          className=\"bubble\"\r\n          style={onGetOutputStyle(onValue.spacing, spacingRef.current, \"%\")}\r\n        >\r\n          {onValue.spacing + \"px\"}\r\n        </output>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Spacing, areEqual);\r\n","C:\\CODING\\React\\css-variables\\src\\components\\Transform\\Transform.jsx",["80"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n  return (\r\n    prevProps.onValue.rotatex === nextProps.onValue.rotatex &&\r\n    prevProps.onValue.rotatey === nextProps.onValue.rotatey &&\r\n    prevProps.onValue.rotatez === nextProps.onValue.rotatez &&\r\n    prevProps.onValue.transOrigX === nextProps.onValue.transOrigX &&\r\n    prevProps.onValue.transOrigY === nextProps.onValue.transOrigY &&\r\n    prevProps.onValue.transOrigZ === nextProps.onValue.transOrigZ &&\r\n    prevProps.onValue.outputStyle === nextProps.onValue.outputStyle &&\r\n    prevProps.onValue.skew === nextProps.onValue.skew\r\n  );\r\n}\r\n\r\nfunction Transform(props) {\r\n  const transOrigXRef = useRef();\r\n  const transOrigYRef = useRef();\r\n  const transOrigZRef = useRef();\r\n  const rotateXRef = useRef();\r\n  const rotateYRef = useRef();\r\n  const rotateZRef = useRef();\r\n  const skewRef = useRef();\r\n\r\n  const { onChanging, onValue, onOutputStyle, onGetOutputStyle } = props;\r\n  // console.log(\"Transform Comp.\");\r\n\r\n  useEffect(() => {\r\n    onOutputStyle();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"transOrigX\">TransOrig-X</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"transOrigX\"\r\n              type=\"range\"\r\n              name=\"transOrigX\"\r\n              min=\"-100\"\r\n              max=\"100\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.transOrigX}\r\n              ref={transOrigXRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={\r\n                // left: ((parseInt(onValue.transOrigX) + 100) * 100) / 200 + \"%\",\r\n                onGetOutputStyle(onValue.transOrigX, transOrigXRef.current, \"%\")\r\n              }\r\n            >\r\n              {onValue.transOrigX + \"%\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"transOrigY\">TransOrig-Y</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"transOrigY\"\r\n              type=\"range\"\r\n              name=\"transOrigY\"\r\n              min=\"-100\"\r\n              max=\"100\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.transOrigY}\r\n              ref={transOrigYRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={onGetOutputStyle(\r\n                onValue.transOrigY,\r\n                transOrigYRef.current,\r\n                \"%\"\r\n              )}\r\n            >\r\n              {onValue.transOrigY + \"%\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"transOrigZ\">TransOrig-Z</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"transOrigZ\"\r\n              type=\"range\"\r\n              name=\"transOrigZ\"\r\n              min=\"-100\"\r\n              max=\"100\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.transOrigZ}\r\n              ref={transOrigZRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={onGetOutputStyle(\r\n                onValue.transOrigZ,\r\n                transOrigZRef.current,\r\n                \"%\"\r\n              )}\r\n            >\r\n              {onValue.transOrigZ + \"px\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n      </>\r\n\r\n      <>\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"rotatex\">Rotate X</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"rotatex\"\r\n              type=\"range\"\r\n              name=\"rotatex\"\r\n              min=\"-180\"\r\n              max=\"180\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.rotatex}\r\n              ref={rotateXRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={onGetOutputStyle(onValue.rotatex, rotateXRef.current, \"%\")}\r\n            >\r\n              {onValue.rotatex + \"deg\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"rotatey\">Rotate Y</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"rotatey\"\r\n              type=\"range\"\r\n              name=\"rotatey\"\r\n              min=\"-180\"\r\n              max=\"180\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.rotatey}\r\n              ref={rotateYRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={onGetOutputStyle(onValue.rotatey, rotateYRef.current, \"%\")}\r\n            >\r\n              {onValue.rotatey + \"deg\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"rotatez\">Rotate Z</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"rotatez\"\r\n              type=\"range\"\r\n              name=\"rotatez\"\r\n              min=\"-180\"\r\n              max=\"180\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.rotatez}\r\n              ref={rotateZRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={onGetOutputStyle(onValue.rotatez, rotateZRef.current, \"%\")}\r\n            >\r\n              {onValue.rotatez + \"deg\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"input-cont col-10 col-xsm-6 col-sm-3 px-sm-2\">\r\n          <div className=\"input-block\">\r\n            <label htmlFor=\"skew\">Skew</label>\r\n            <input\r\n              className=\"form-control-range\"\r\n              id=\"skew\"\r\n              type=\"range\"\r\n              name=\"skew\"\r\n              min=\"-90\"\r\n              max=\"90\"\r\n              data-sizing=\"px\"\r\n              onChange={onChanging}\r\n              value={onValue.skew}\r\n              ref={skewRef}\r\n            />\r\n            <output\r\n              className=\"bubble\"\r\n              style={\r\n                onGetOutputStyle(onValue.skew, skewRef.current, \"%\")\r\n                //  left: ((parseInt(onValue.skew) + 90) * 100) / 180 + \"%\"\r\n              }\r\n            >\r\n              {onValue.skew + \"deg\"}\r\n            </output>\r\n          </div>\r\n        </div>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Transform, areEqual);\r\n","C:\\CODING\\React\\css-variables\\src\\components\\ChooseAnim\\ChooseAnim.jsx",["81"],"import React, { useMemo } from \"react\";\r\n\r\nfunction ChooseAnim({ onState, onChanging }) {\r\n  //   console.log(\"ChooseAnim Comp.\");\r\n\r\n  const animList = useMemo(() => {\r\n    return onState.options.map((name, ind) => {\r\n      return (\r\n        <option key={ind} value={onState.optionsValues[ind]}>\r\n          {name}\r\n        </option>\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"animation-type form-group\">\r\n      <div className=\"input-block ml-2\">\r\n        <label htmlFor=\"animation\">Animation</label>\r\n        <select\r\n          className=\"form-control\"\r\n          id=\"animation\"\r\n          name=\"animation\"\r\n          onChange={onChanging}\r\n          defaultValue=\"animRotateXYZ\"\r\n        >\r\n          {animList}\r\n          {/* <option value=\"none\">none</option>\r\n          <option value=\"animRotate\">rotate</option>\r\n          <option value=\"animRotateX\">rotate-X</option>\r\n          <option value=\"animRotateY\">rotate-Y</option>\r\n          <option value=\"animRotateZ\">rotate-Z</option>\r\n          <option value=\"animRotateXY\">rotate-X-Y</option>\r\n          <option value=\"animRotateXY\">rotate-Y-X</option>\r\n          <option value=\"animRotateXZ\">rotate-X-Z</option>\r\n          <option value=\"animRotateZX\">rotate-Z-X</option>\r\n          <option value=\"animRotateYZ\">rotate-Y-Z</option>\r\n          <option value=\"animRotateZY\">rotate-Z-Y</option>\r\n          <option value=\"animRotateXYZ\">rotate-X-Y-Z</option>\r\n          <option value=\"animRotateXZY\">rotate-X-Z-Y</option>\r\n          <option value=\"animRotateYXZ\">rotate-Y-X-Z</option>\r\n          <option value=\"animRotateYZX\">rotate-Y-Z-X</option>\r\n          <option value=\"animRotateZXY\">rotate-Z-X-Y</option>\r\n          <option value=\"animRotateZYX\">rotate-Z-Y-X</option> */}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(ChooseAnim);\r\n","C:\\CODING\\React\\css-variables\\src\\components\\Header\\Header.jsx",["82"],"C:\\CODING\\React\\css-variables\\src\\components\\subHeader\\SubHeader.jsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":79,"column":19,"nodeType":"89","messageId":"90","endLine":79,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":115,"column":13,"nodeType":"93","messageId":"94","endLine":115,"endColumn":17},{"ruleId":"91","severity":1,"message":"95","line":1,"column":39,"nodeType":"93","messageId":"94","endLine":1,"endColumn":48},{"ruleId":"96","severity":1,"message":"97","line":18,"column":6,"nodeType":"98","endLine":18,"endColumn":8,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":46,"column":5,"nodeType":"98","endLine":46,"endColumn":52,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"97","line":18,"column":6,"nodeType":"98","endLine":18,"endColumn":8,"suggestions":"102"},{"ruleId":"96","severity":1,"message":"97","line":30,"column":6,"nodeType":"98","endLine":30,"endColumn":8,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":14,"column":6,"nodeType":"98","endLine":14,"endColumn":8,"suggestions":"105"},{"ruleId":"91","severity":1,"message":"106","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":17},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'blur' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onOutputStyle'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook React.useMemo has a missing dependency: 'onGetOutputStyle'. Either include it or remove the dependency array.",["110"],["111"],["112"],"React Hook useMemo has missing dependencies: 'onState.options' and 'onState.optionsValues'. Either include them or remove the dependency array.",["113"],"'SubHeader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"114","fix":"118"},{"desc":"114","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [onOutputStyle]",{"range":"122","text":"123"},"Update the dependencies array to be: [onChanging, onGetOutputStyle, onValue.blur]",{"range":"124","text":"125"},{"range":"126","text":"123"},{"range":"127","text":"123"},"Update the dependencies array to be: [onState.options, onState.optionsValues]",{"range":"128","text":"129"},[503,505],"[onOutputStyle]",[1259,1306],"[onChanging, onGetOutputStyle, onValue.blur]",[522,524],[1072,1074],[359,361],"[onState.options, onState.optionsValues]"]